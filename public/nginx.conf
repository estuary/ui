# This config file was taken from the default nginx image by running:
# $ docker run --rm --detach --name tmp nginx:alpine
# $ docker cp tmp:/etc/nginx/nginx.conf
# Any modifications from the default should have comments.
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # X-Frame-Options is to prevent from clickJacking attack
    add_header X-Frame-Options SAMEORIGIN;

    # disable content-type sniffing on some browsers.
    add_header X-Content-Type-Options nosniff;

    # Enable gzip
    gzip on;
    gzip_min_length  500;
    gzip_proxied     any;
    gzip_comp_level 4;
    gzip_types  text/css text/javascript text/xml text/plain text/x-component application/javascript application/json application/wasm application/xml font/truetype font/opentype font/woff2 image/svg+xml;
    gzip_vary on;
    gzip_disable     "msie6";

    # This configuration was added so that users refreshing the page will not get a 404 due to the
    # react router URLs (e.g. `/captures/create`) not corresponding to an actual resource on the
    # server. The `try_files` will ensure that we serve index.html if the requested resource is not
    # found. This was adapted from /etc/nginx/conf.d/default.conf, which was previously brought in
    # with an `include` directive.
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;

            # just use the request id for right now
            # need to generate a true one
            set $cspNonce $request_id;
            
            # Put the nonce into the html response
            sub_filter_once off;
            sub_filter_types *;
            sub_filter __NGINX_CSP_NONCE__ $cspNonce;
            add_header X-Nonce $cspNonce;

            add_header Cache-Control 'no-cache, no-store, must-revalidate';
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header X-Frame-Options SAMEORIGIN always;
            add_header X-Content-Type-Options nosniff always;
            add_header Referrer-Policy no-referrer-when-downgrade always;
            add_header Permissions-Policy "geolocation=(), microphone=(), camera=() always";
            add_header Content-Security-Policy "
                default-src 'self' https:;
                script-src 'self' 'unsafe-inline' 'unsafe-eval' https: https://cdn.logrocket.io https://cdn.lr-ingest.io https://cdn.lr-in.com https://cdn.lr-in-prod.com https://cdn.lr-ingest.com https://cdn.ingest-lr.com https://cdn.lr-intake.com https://cdn.intake-lr.com;
                style-src 'self' 'unsafe-inline' https:;
                img-src 'self' data: https:;
                font-src 'self' data: https:;
                connect-src 'self' https: https://*.logrocket.io https://*.lr-ingest.io https://*.logrocket.com https://*.lr-in.com https://*.lr-in-prod.com https://*.lr-ingest.com https://*.ingest-lr.com https://*.lr-intake.com https://*.intake-lr.com https://*.logr-ingest.com;
                object-src 'none';
                base-uri 'self';
                form-action 'self';
                frame-ancestors 'self';
                worker-src 'self' blob: https:;
                child-src 'self' blob: https:;
                upgrade-insecure-requests;
                reflected-xss 'block';
            ";

            add_header Content-Security-Policy-Report-Only "
                default-src 'self';
                
                script-src 'report-sample' 'self' 'wasm-eval' 'nonce-$cspNonce' https://*.google-analytics.com https://*.analytics.google.com https://*.googletagmanager.com https://*.g.doubleclick.net https://*.google.com https://*.reo.dev https://*.stripe.network https://*.js.stripe.com https://js.stripe.com https://maps.googleapis.com https://cdn.logrocket.io https://cdn.lr-ingest.io https://cdn.lr-in.com https://cdn.lr-in-prod.com https://cdn.lr-ingest.com https://cdn.ingest-lr.com https://cdn.lr-intake.com https://cdn.intake-lr.com https://*.logr-ingest.com;
                
                connect-src 'report-sample' 'self' https://*.estuary-data.dev https://config-encryption.estuary.dev https://eyrcnmuzzyriypdajwdk.supabase.co https://agent-api-1084703453822.us-central1.run.app https://gcp-marketplace-verify-mo7rswd2xq-uc.a.run.app https://analytics.google.com https://stats.g.doubleclick.net https://*.logrocket.io https://*.lr-ingest.io https://*.logrocket.com https://*.lr-in.com https://*.lr-in-prod.com https://*.lr-ingest.com https://*.ingest-lr.com https://*.lr-intake.com https://*.intake-lr.com https://*.logr-ingest.com https://*.lrkt-in.com https://api.stripe.com https://maps.googleapis.com;
                
                frame-src 'self' https://docs.estuary.dev https://go.estuary.dev https://connect-js.stripe.com https://js.stripe.com https://*.js.stripe.com https://hooks.stripe.com https://td.doubleclick.net https://www.googletagmanager.com;
                
                base-uri 'self';
                child-src 'self' blob:;
                font-src 'self' data: https:;
                form-action 'self';
                frame-ancestors 'self';
                img-src 'self' data: https:;
                manifest-src 'self';
                media-src 'self';
                object-src 'none';
                style-src 'report-sample' 'self' 'unsafe-inline';
                worker-src 'self' blob:;
                
                reflected-xss 'block';
                require-trusted-types-for 'script';
                upgrade-insecure-requests;
                report-uri https://67211c41d5ccea405a7a6cd5.endpoint.csper.io/?v=0;
            ";

            # Here to serve our T&C doc
            location /terms.html {
                root   /usr/share/nginx/html;
                index  terms.html;
                try_files $uri $uri/ /terms.html;
            }

            # Serves json file used for UI to figure out latest build
            location /meta.json {
                root   /usr/share/nginx/html;
                index  meta.json;
                try_files $uri $uri/ /meta.json;
            }
        }

        # Server up the JS/images/etc. from UI build
        location /static {
            alias   /usr/share/nginx/html/static;
            expires 1y;
            add_header Cache-Control "public";
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        if (-f /usr/share/nginx/html/maintenance) {
            return 503;
        }
        error_page 503 @maintenance;

        location @maintenance {
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /503.html break;
        }
    }
}

